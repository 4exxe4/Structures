#include <iostream>
#include <conio.h>
using namespace std;

#define Escape     27

//#define WHILE_1
//#define WHILE_2

void main()
{
	setlocale(LC_ALL, "");

#if defined WHILE_1
	int i = 0; //Счетчик цикла
	int n = 5; //Количество итераций (однократное выполнения тела цикла)
	while (i < n)
	{
		cout << i << ". Loops " << endl;
		i++;
	}
#endif // WHILE_1

#if defined WHILE_2
	int n;
	cout << "Введите количество итераций: "; cin >> n;
	while (n--)
	{
		cout << n << "\t";
	}
	cout << endl;
#endif //WHILE_2

	char key;  // Эта переменная будет хранить ASCII-код нажатой клавиши
	do
	{
		key = _getch(); //Функция _getch () ожидает нажатие клавиши и возвращает ASCII-код нажатой клавиши
		                //Функция _getch() находится в библиотеке <conio.h> - console Input/Output header
		cout << (int)key << "\t" << key << endl;
		//(int)key - явное преобразование переменной "key" в тип данных "int",
		//для того, чтобы увидеть числовой код нажатой клавиши

	} while (key != Escape);

}



/*
Цикл (loop) - это управляющая структура, которая позволяет многократно выполнить, то есть зациклить, определенную часть кода.
В языке C++ существуют всего 3 цикла:
1) While - цикл с предусловием;
2) Do...While - цикл с постусловием;
3) For - цикл на заданное число итераций;

Итерация - это однократное выполнение тела цикла.
Тело цикла - это код, то есть фрагмент кода, который нужно зациклить, то есть многократно выполнить

Рассмотрит циклы while и do:

I)

while (condition)                                                                  do
{                                                                                 {
  ....;                                                                             ....;
  group - of - statements;                                                          group - of - statements;
  ....;                                                                             ....;
}                                                                                 } while (Condition);

1) Проверяется условие                                                           1) Выполняется тело цикла
2) Если условие вернуло true, выполняется тело цикла                             2) Проверяется условие
3) Происходит возврат в начало, и снова выполнятся тело цикла                    3) Если условие вернуло true, происходит возврат в начало и снова выполняется тело цикла
4) Если условие вернуло false, происходит выход за пределы цикла                 4) Если условие вернуло false, происходит выход за пределы цикла

Циклы while и do while отличаются тем, что do while в любом случае выполнится хотя бы один раз независимо от условия, 
потому что это цикл с постусловием и условие проверяется после выполнения тела цикла.
Цикл while является циклом с предусловием и поэтому, если при первой же проверке условие вернуло false, то тело цикла ни разу не будет выполнено

II) 

Do while, как правило, используется в том случае, когда переменная участвующая в условии, инициализируется в теле цикла.
Цикл while сначала думает, а потом делает
Цикл do while сначала делает, а потом думает

III)

Цикл for:
Цикл for - это цикл на заданное число итераций
У цикла for следующий синтаксис:
for (counter; condition; expression;)
{
   .....;
   group-of-statements;
   .....;
}
I)

counter - это выражение, в котором объявляется и инициализируется счетчик.
Счетчик (counter) - это переменная, которая считает сколько раз выполнился или будет выполнен цикл

Счетчик может быть локальным или глобальным. 
1) Локальный счетчик объявляется в самом цикле на месте выражения counter и существует только в этом цикле. Локальный счетчик удаляется из памяти по завершении всех итераций.
2) Если счетчик объявлен перед for, то он существует и после for. For лишь изменяет его. Глобальный счетчик может последовательно использоваться несколькими for'ами,
Например один цикл будет его увеличивать, а второй будет его уменьшать.

Как правило, счетчик делают локальным. Глобальные счетчики используют в исключительно редких случаях

----------------------------------------------------------------
Выражение counter отрабатывает ОДИН РАЗ - перед первой итерацией
----------------------------------------------------------------

II)

Condition - это условие продолжения или завершения цикла. Условие - это сравнение. В этом условии, как правило, счетчик сравнивается с каким-либо значением.

!!!!!!!!!!!!!!!!Условие проверяется перед каждой итерацией!!!!!!!!!!!!!!!!!!!!!!!!!!!

III)

Expression - это выражение, которое изменяет счетчик. В этом выражении, как правило, пишут ++ или --. Но в нем можно писать абсолютно все, что угодно.

!!!!!!!!!!!!!!!!!!Expression выполняется после каждой итерации!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

------------------------------------------------------------------
Как правило цикл for пишут вот так:
for (int = 0, i < n; i++)
{
   ........;
   .......;
   ........;
}
Group-of-statements - это тело цикла

Цикл for работает следующим образом:
int n = 10

        (1)     (2) (5) (4)
for (int i = 0; i < n; i++)
{
  (3) cout << i << "\t";
}
(6)

1) Объявляется и инициализируется счетчик (больше это выражение не отрабатывает)
2) Проверяется условие
3) Если условие вернуло true, то выполняется тело цикла
4) После выполнения тела цикла, происходит возврат в выражение expression и изменяется счетчик
5) После изменения счетчика снова проверяется условие. Если оно возвращает true, то снова выполняется тело цикла, и так далее, пока условие не вернет false.
6) Если условие вернуло false, то происходит выход за пределы цикла и при этом из памяти удаляется счетчик, если он локальный
------------------------------------------------------------------
Все 3 выражения в заголовке for являются необязательными
*/