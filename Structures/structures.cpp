#include <iostream>
using namespace std;

void main()
{
	setlocale(LC_ALL, "");
	cout << "ControlStructures" << endl;
	int temperature;
	cout << "Введите температуру воздуха: "; cin >> temperature;
	cout << temperature << endl;
	if (temperature > 50)
	{
		cout << "Вы на другой планете" << endl;
	}
	else if (temperature > 40)
	{
		cout << "Вы на экваторе" << endl;
	}
	else if (temperature > 30)
	{
		cout << "Капец как жарко" << endl;
	}
	else if (temperature > 20)
	{
		cout << "Жарко" << endl;
	}
	else if (temperature > 10)
	{
		cout << "Тепло" << endl;
	}
	else if (temperature > 0)
	{
		cout << "Прохладно" << endl;
	}
	else if (temperature > -10)
	{
		cout << "Мороз" << endl;
	}
	else if (temperature > -30)
	{
		cout << "Сильный мороз" << endl;
	}
	else if (temperature > -70)
	{
		cout << "Вы на северном полюсе" << endl;
	}
	else
	{
		cout << "Вы на другой планете" << endl;
	}
}

/*
Condition - это условие. А условие включает в себя одну или несколько операций сравнения. УСЛОВИЕ - ЭТО СРАВНЕНИЕ. Если условие вернуло true, то выполняется CODE 1.
После его выполнения блок else и CODE 2 игнорируются.
Если условие вернуло FALSE, то CODE 1 игнорируется и выполнение сразу же переходит в блок ELSE, если он есть и выполняет CODE 2.
Блок else и CODE 2 являются необязательными элементами конструкции IF.
В зависимости от того, что вернуло условие (true либо false), код IF будет выполняться или нет.

Конструкции IF/ELSE можно объединять в цепочку следующим образом:
           if (condition1)
		   {
		     ......;
			 code1;
			 ......;
           }
			else if (condition 2)
			{
			 ......;
			 code2;
			 ......;
			}
			.......
			.......
			else if (conditionN)
			{
			 ......;
			 CodeN;
			 ......;
            }
			else
            {
			 .....;
			 DefaultCode;
			 .....;
			}
Важно заметить, что после ключевого слово else условие никогда не пишется, а сразу же открываются фигурные скобки и пишется код.
Для того, чтобы написать условие после else, необходимо написать if, а после него условие. 
В такой цепочке условия проверяются последовательно. 
Для того, чтобы следующее условие было проверено, предыдущее условие должно вернуть FALSE. Если же какое-то условие вернуло true, выполняется соответствущий ему код. А после его выполнения, все, что ниже в цепочке, игнорируется и происходит выход за пределы всей цепочки.
Для того, чтобы выполнился DefaultCode в последнем блоке else, абсолютно все условия цепочки должны вернуть false
*/

/*

Часто возникает необходимость сделать выбор того, какая часть кода будет выполнена или же многократно выполнить определенную часть кода
Для этого в любом языке программирования есть управляющие структуры. Они делятся на две категории:
1) Ветвления
2) Циклы
К ветвлениям относятся if/else и switch. Они позволяют выбрать какой-то фрагмент кода для выполнения. 
К циклам относятся while, do/while и for.

IF..... ELSE.....:
Управляющая структура IF позволяет выполнить один из двух вариантов кода в зависимости от условия.
У if следующий синтаксис
*/